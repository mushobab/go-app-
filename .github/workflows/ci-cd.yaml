name: CI/CD for Go Lambda

on:
  push:
    branches:
      - main

  workflow_dispatch:
    # This allows manual triggering for the apply job.

jobs:
  build:
    name: Build Go Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Install dependencies
        run: go mod tidy

      - name: Build Go binary
        run: |
          mkdir -p build
          GOOS=linux GOARCH=amd64 go build -o build/main main.go
          zip -j build/hello-world.zip build/main
          
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: build/hello-world.zip

  terraform_plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: terraform/
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform/
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform/
        run: terraform plan -out tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tf-plan
          path: terraform/tfplan

  terraform_apply:
    name: Terraform Apply (Manual)
    runs-on: ubuntu-latest
    needs: terraform_plan
    if: github.event_name == 'workflow_dispatch' # Only trigger when manually invoked

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tf-plan

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Apply Terraform Plan
        working-directory: terraform/
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
